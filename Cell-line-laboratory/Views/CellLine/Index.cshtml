@model X.PagedList.IPagedList<Cell_line_laboratory.Entities.CellLine>
@using X.PagedList.Mvc.Core


@{
    ViewData["Title"] = "Index";

}

<header class="page-header">
    <h1 class="page-title">Manage CellLine</h1>
</header>
<style>
    .line-break {
        display: block;
        margin-top: 0.25rem; /* Adjust the spacing as needed */
    }
</style>

<div class="page-content">
    <div class="card mb-0">
        <div class="card-body">
            <div class="elements-list">

                @if (User.IsInRole("SuperUser") || User.IsInRole("Tier1"))
                {
                  <a asp-controller="CellLine" asp-action="UploadExcel" class="badge badge-dark badge-pill"><span class="icofont-clip me-2"></span>Upload</a>
                } 
                <a asp-controller="CellLine" asp-action="SearchCellLines" class="badge badge-dark badge-pill">Download<span class="icofont-download-alt ms-2"></span></a>
                <a asp-controller="CellLine" asp-action="Search" class="badge badge-dark badge-pill">Daily Usage<span class="icofont-worker ms-2"></span></a>
            </div>
            <div class="table-responsive">
                <div class="mb-3">
                    <input id="searchInput" type="text" class="form-control" placeholder="Search cellline...">
                </div>
                <table id="dataTable" class="table table-hover">
                    <thead>
                        <tr class="bg-primary text-white">
                            <th scope="col">#</th>
                            <th scope="col">CellLine Code</th>
                            <th scope="col">Genotype</th>
                            <th scope="col">Position</th>
                            <th scope="col">Parental Line</th>
                            <th scope="col">Date</th>
                            <th scope="col">Note</th>
                            <th scope="col">User</th>
                            <th scope="col">Status</th>
                            <th scope="col">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (var i = 0; i < Model.Count; i++)
                        {
                            var cellLine = Model[i];
                            if (!(cellLine.IsMarkedForDeletion && cellLine.DeletionTimestamp > DateTime.UtcNow))
                            {
                                <tr>
                                    <td>@(i + 1)</td>
                                    <td>@cellLine.CellLineCode</td>
                                    <td>@cellLine.Genotype</td>

                                    <td>
                                        @if (!cellLine.Position.StartsWith("CLD BOX 01-"))
                                        {
                                            <text>CLD BOX 01-</text>
                                        }
                                        @Html.Raw(cellLine.Position.Replace(",", ",<span class=\"line-break\"></span>CLD BOX 01-"))
                                    </td>

                                    <td>@cellLine.ParentalLine</td>


                                    <td>@cellLine.Date</td>
                                    <td>@(cellLine.Notes.Length > 10 ? $"{cellLine.Notes.Substring(0, 10)} ..." : cellLine.Notes)</td>
                                    <td>@cellLine.UserName</td>
                                    <td><span class="badge badge-success">@cellLine.Status</span></td>

                                    <td>
                                        <div class="actions">

                                            <a href="@Url.Action("Details", new { id = cellLine.Id })" class="btn btn-primary btn-sm btn-square rounded-pill">
                                                <span class="btn-icon icofont-eye-alt"></span>
                                            </a>
                                            @if (User.IsInRole("SuperUser") || User.IsInRole("Tier1"))
                                            {
                                                <a href="@Url.Action("Edit", new { id = cellLine.Id })" class="btn btn-primary btn-sm btn-square rounded-pill"> <span class="btn-icon icofont-ui-edit"></span></a>

                                                <form asp-controller="CellLine" asp-action="Delete" method="post" class="delete-form">
                                                    <input type="hidden" name="id" value="@cellLine.Id" />
                                                    <button type="button" class="btn btn-danger btn-sm btn-square rounded-pill delete-button" data-bs-toggle="modal" data-bs-target="#confirmationModal" data-confirm="Are you sure you want to delete this cell line?"> <span class="btn-icon icofont-ui-delete"></span></button>
                                                </form>
                                            }
                                        </div>

                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    @if (User.IsInRole("SuperUser") || User.IsInRole("Tier1"))
    {
        <a asp-controller="CellLine" asp-action="Create" class="add-action-box">
            <span class="btn btn-primary btn-lg btn-square rounded-pill">
                <span class="btn-icon icofont-plus"></span>
            </span>
        </a>
    }
</div>

<!-- Confirmation Modal -->
<div class="modal fade" id="confirmationModal" tabindex="-1" aria-labelledby="confirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmationModalLabel">Confirmation</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p id="confirmationMessage">Are you sure?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDelete">Delete</button>
            </div>
        </div>
    </div>
</div>
<br />
<div class="pager">
    <ul class="pagination">
        <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
            <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber - 1 })">Previous</a>
        </li>
        @for (int i = 1; i <= Model.PageCount; i++)
        {
            <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
            </li>
        }
        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
            <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber + 1 })">Next</a>
        </li>
    </ul>
</div>


<script>

    document.querySelectorAll(".delete-form").forEach(form => {
        const deleteButton = form.querySelector(".delete-button");
        const confirmationModal = document.querySelector("#confirmationModal");
        const confirmDeleteButton = confirmationModal.querySelector("#confirmDelete");
        const confirmationMessage = confirmationModal.querySelector("#confirmationMessage");

        deleteButton.addEventListener("click", function (event) {
            const confirmMessage = deleteButton.getAttribute("data-confirm");
            confirmationMessage.textContent = confirmMessage;

            confirmDeleteButton.addEventListener("click", function () {
                form.submit();
            });
        });
    });

    document.getElementById("searchInput").addEventListener("input", function () {
        var searchValue = this.value.toLowerCase();
        var rows = document.querySelectorAll("#dataTable tbody tr");

        for (var i = 0; i < rows.length; i++) {
            var row = rows[i];
            var cells = row.cells;
            var rowMatches = false;

            for (var j = 1; j < cells.length - 1; j++) { // Start from 1 to skip the first column, skip last column (delete button)
                var cellContent = cells[j].textContent.toLowerCase();

                if (cellContent.includes(searchValue)) {
                    rowMatches = true;
                    break;
                }
            }

            if (rowMatches) {
                row.style.display = "";
            } else {
                row.style.display = "none";
            }
        }
    });



</script>
